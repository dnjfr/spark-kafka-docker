services:
  spark-master:
    container_name: spark-master
    build: .
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - spark-logs:/opt/spark/spark-events
      - ./warehouse:/opt/spark/warehouse
    env_file:
      - .env.spark
    ports:
      - '8080:8080'
      - '7077:7077'
      - '4040:4040'

  spark-history-server:
    container_name: spark-history
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - spark-logs:/opt/spark/spark-events
      - ./warehouse:/opt/spark/warehouse
    ports:
      - '18080:18080'

  spark-worker-1:
    container_name: spark-worker-1
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./scripts:/opt/spark/scripts
      - ./data:/opt/spark/data
      - spark-logs:/opt/spark/spark-events
      - ./warehouse:/opt/spark/warehouse

  # spark-worker-2:
  #   container_name: spark-worker-2
  #   image: spark-image
  #   entrypoint: ['./entrypoint.sh', 'worker']
  #   depends_on:
  #     - spark-master
  #   env_file:
  #     - .env.spark
  #   volumes:
  #     - ./scripts:/opt/spark/scripts
  #     - ./data:/opt/spark/data
  #     - spark-logs:/opt/spark/spark-events
  #     - ./warehouse:/opt/spark/warehouse

  # spark-worker-3:
  #   container_name: spark-worker-3
  #   image: spark-image
  #   entrypoint: ['./entrypoint.sh', 'worker']
  #   depends_on:
  #     - spark-master
  #   env_file:
  #     - .env.spark
  #   volumes:
  #     - ./scripts:/opt/spark/scripts
  #     - ./data:/opt/spark/data
  #     - spark-logs:/opt/spark/spark-events
  #     - ./warehouse:/opt/spark/warehouse

  kafka-broker-1:
    image: bitnami/kafka:3.9.0
    container_name: kafka-broker-1
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-broker-1:9093,1@kafka-broker-2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data_broker_1:/bitnami/kafka
  
  kafka-broker-2:
    image: bitnami/kafka:3.9.0
    container_name: kafka-broker-2
    ports:
      - '9094:9092'
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker-2:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-broker-1:9093,1@kafka-broker-2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data_broker_2:/bitnami/kafka

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui
    ports:
      - 8000:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true

volumes:
  spark-logs:
  kafka_data_broker_1:
  kafka_data_broker_2:
